import sys
import glob
import csv
import os


CODES_LENGTH1 = {16,18,21,22,23,24,25,54,55,56,57,58,169,188}
CODES_LENGTH2 = {19,20,179,181,182,183,184,187,189,192,193,178,180,132,17,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,198,199}
CODES_LENGTH4 = {185,186,200,201}
CODES_TABLE = {170,}
CODES_LOOKUP = {171,}
CODES_WIDE = {196,}
CODES_ARRAY = {197,}

## Decodes OPCODES
def OPCode(codes:list)->list:
        i = 0
        actualCodes = []
        while i<len(codes):
                actualCodes.append(codes[i])
                if codes[i] in CODES_LENGTH1:
                        i+=2
                elif codes[i] in CODES_LENGTH2:
                        i+=3
                elif codes[i] in CODES_ARRAY:
                        i+=4
                elif codes[i] in CODES_LENGTH4:
                        i+=5
                elif codes[i] in CODES_WIDE:
                        i+=1
                        if codes[i] == 132: i+=5
                        else: i+=3
                elif codes[i] in CODES_TABLE:
                        i+=1
                        while i%4 != 0: i+=1
                        i+=4
                        low = codes[i]*16777216+codes[i+1]*65536+codes[i+2]*256+codes[i+3]
                        i+=4
                        high = codes[i]*16777216+codes[i+1]*65536+codes[i+2]*256+codes[i+3]
                        i+=4
                        i+= (high-low+1)*4
                elif codes[i] in CODES_LOOKUP:
                        i+=1
                        while i%4 != 0: i+=1
                        i+=4
                        num = codes[i]*16777216+codes[i+1]*65536+codes[i+2]*256+codes[i+3]
                        i+=4
                        i+= num*4
                else: i+=1
        return actualCodes

allfiles = []
for classfile in glob.glob(sys.argv[1]+'/*.class'):
        ##Begin reading class file
        opcodes = []
        f1 = open(classfile, 'rb')
        file = f1.read()
        f1.close()
        size  = file[8]*256+file[9]
        j = 10
        codeloc = -1
        i = 0
        ##Read (skip) constant pool
        while i < size-1:
                if file[j]== 1:
                        j+=1
                        s = file[j]*256+file[j+1]
                        j+=2
                        l = [' ',' ',' ',' ']
                        for k in range(s):
                                l.pop(0)
                                l.append(chr(file[j]))
                                if l == ['C','o','d','e']:
                                        codeloc = i+1
                                j+=1
                elif file[j]== 3:
                        j+=5
                elif file[j]== 4:
                        j+=5
                elif file[j]== 5:
                        j+=9
                        i+=1
                elif file[j]== 6:
                        j+=9
                        i+=1
                elif file[j]== 7:
                        j+=3
                elif file[j]== 8:
                        j+=3
                elif file[j]== 9:
                        j+=5
                elif file[j]== 10:
                        j+=5
                elif file[j]== 11:
                        j+=5
                elif file[j]== 12:
                        j+=5
                elif file[j]== 15:
                        j+=4
                elif file[j]== 16:
                        j+=3
                elif file[j]== 18:
                        j+=5
                else: print ('ERROR!!!!')
                i+=1
        if codeloc == -1:
                print('NO CODE SECTION! for file '+classfile)
        j+=6
        interface = file[j]*256+file[j+1]
        j+=2
        j+=interface*2
        fields = file[j]*256+file[j+1]
        j+=2
        ##Read fields
        for i in range (fields):
                j+=6
                attributes = file[j]*256+file[j+1]
                j+=2
                for k in range(attributes):
                        if file[j]*256+file[j+1] == codeloc:
                                j+=2
                                info = file[j]*16777216+file[j+1]*65536+file[j+2]*256+file[j+3]
                                j+=4
                                c = j
                                c+=4
                                code = file[c]*16777216+file[c+1]*65536+file[c+2]*256+file[c+3]
                                c+=4
                                opcodes+=OPCode(file[c:c+code])
                                opcodes.append (-1)
                                j+=info
                        else:
                                j+=2
                                info = file[j]*16777216+file[j+1]*65536+file[j+2]*256+file[j+3]
                                j+=4+info
        methods = file[j]*256+file[j+1]
        j+=2
        ##Read methods
        for i in range(methods):
                j+=6
                attributes = file[j]*256+file[j+1]
                j+=2
                for k in range(attributes):
                        if file[j]*256+file[j+1] == codeloc:
                                j+=2
                                info = file[j]*16777216+file[j+1]*65536+file[j+2]*256+file[j+3]
                                j+=4
                                c = j
                                c+=4
                                code = file[c]*16777216+file[c+1]*65536+file[c+2]*256+file[c+3]
                                c+=4
                                opcodes+=OPCode(file[c:c+code])
                                opcodes.append (-1)
                                j+=info
                        else:
                                j+=2
                                info = file[j]*16777216+file[j+1]*65536+file[j+2]*256+file[j+3]
                                j+=4+info
        attributes = file[j]*256+file[j+1]
        j+=2
        ##Read attributes
        for k in range(attributes):
                if file[j]*256+file[j+1] == codeloc:
                        j+=2
                        info = file[j]*16777216+file[j+1]*65536+file[j+2]*256+file[j+3]
                        j+=4
                        c = j
                        c+=4
                        code = file[c]*16777216+file[c+1]*65536+file[c+2]*256+file[c+3]
                        c+=4
                        opcodes+=OPCode(file[c:c+code])
                        opcodes.append (-1)
                        j+=info
                else:
                        j+=2
                        info = file[j]*16777216+file[j+1]*65536+file[j+2]*256+file[j+3]
                        j+=4+info
        if j!=len(file):
                print('FILE TOO LONG OR INCORRECTLY FORMATTED')
        allfiles+=opcodes
        opcodes.append ('-1')
##Write opcodes to csv
f = open(os.getcwd() + '/output.csv', 'w')
for code in allfiles:
        f.write (repr(code))
        f.write(',')
f.close()
nb = input('Press enter to continue')












